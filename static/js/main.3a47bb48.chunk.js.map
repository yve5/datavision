{"version":3,"sources":["Features/Bar/Bar.js","Features/Datepicker/Datepicker.js","config/constants.js","Features/Chart/Chart.js","App.js","serviceWorker.js","index.js"],"names":["Bar","react_default","a","createElement","className","this","props","time","data","style","width","left","average","Component","Datepicker","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","initialDate","Date","state","hours","getHours","minutes","getMinutes","seconds","getSeconds","handleHoursChange","bind","assertThisInitialized","handleMinutesChange","handleSecondsChange","event","setState","target","value","update","setHours","onTimeChange","toString","setMinutes","setSeconds","i","push","key","slice","secsMins","onChange","Chart","options","description","family","records","start","end","handleChange","handleRecords","onStartTimeChange","onEndTimeChange","newDate","startDate","endDate","results","metrics","forEach","element","pieces","split","eltDate","length","smallest","largest","result","Math","round","_this2","map","option","index","Features_Datepicker_Datepicker","record","Features_Bar_Bar","App","Features_Chart_Chart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"68kCAkBeA,gMAbX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAcC,KAAKC,MAAMC,MACxCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXC,KAAKC,MAAME,KACbP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaK,MAAO,CAAEC,MAASL,KAAKC,MAAMI,MAAQ,OAClET,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeK,MAAO,CAAEE,KAAQN,KAAKC,MAAMM,QAAU,gBAR7DC,cC8DHC,cA7Db,SAAAA,EAAYR,GAAO,IAAAS,EAAAC,OAAAC,EAAA,EAAAD,CAAAX,KAAAS,GACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAX,KAAAW,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAf,KAAMC,IAEN,IAAIe,EAAc,IAAIC,KAAKP,EAAKT,MAAMC,MAHrB,OAKjBQ,EAAKQ,MAAQ,CACXC,MAAOH,EAAYI,WACnBC,QAASL,EAAYM,aACrBC,QAASP,EAAYQ,cAGvBd,EAAKe,kBAAoBf,EAAKe,kBAAkBC,KAAvBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACzBA,EAAKkB,oBAAsBlB,EAAKkB,oBAAoBF,KAAzBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KAC3BA,EAAKmB,oBAAsBnB,EAAKmB,oBAAoBH,KAAzBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KAbVA,iFAgBDoB,GAChB9B,KAAK+B,SAAS,CAAEZ,MAAOW,EAAME,OAAOC,QAEpC,IAAIC,EAAS,IAAIjB,KAAKjB,KAAKC,MAAMC,MACjCgC,EAAOC,SAASL,EAAME,OAAOC,OAC7BjC,KAAKC,MAAMmC,aAAaF,EAAOG,wDAGbP,GAClB9B,KAAK+B,SAAS,CAAEV,QAASS,EAAME,OAAOC,QAEtC,IAAIC,EAAS,IAAIjB,KAAKjB,KAAKC,MAAMC,MACjCgC,EAAOI,WAAWR,EAAME,OAAOC,OAC/BjC,KAAKC,MAAMmC,aAAaF,EAAOG,wDAGbP,GAClB9B,KAAK+B,SAAS,CAAER,QAASO,EAAME,OAAOC,QAEtC,IAAIC,EAAS,IAAIjB,KAAKjB,KAAKC,MAAMC,MACjCgC,EAAOK,WAAWT,EAAME,OAAOC,OAC/BjC,KAAKC,MAAMmC,aAAaF,EAAOG,6CAK/B,IADA,IAAIlB,EAAQ,GACHqB,EC7CmB,GD6CCA,EC5CH,GD4CqBA,IAC7CrB,EAAMsB,KAAK7C,EAAAC,EAAAC,cAAA,UAAQmC,MAAOO,EAAGE,IAAK,MAAQF,IAAM,IAAMA,GAAGG,OAAO,KAIlE,IADA,IAAIC,EAAW,GACNJ,EChDsB,EDgDCA,EC/CH,GD+CwBA,IACnDI,EAASH,KAAK7C,EAAAC,EAAAC,cAAA,UAAQmC,MAAOO,EAAGE,IAAK,MAAQF,IAAM,IAAMA,GAAGG,OAAO,KAGrE,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQmC,MAAOjC,KAAKkB,MAAMC,MAAO0B,SAAU7C,KAAKyB,mBAAoBN,GACpEvB,EAAAC,EAAAC,cAAA,UAAQmC,MAAOjC,KAAKkB,MAAMG,QAASwB,SAAU7C,KAAK4B,qBAAsBgB,GACxEhD,EAAAC,EAAAC,cAAA,UAAQmC,MAAOjC,KAAKkB,MAAMK,QAASsB,SAAU7C,KAAK6B,qBAAsBe,WAxDvDpC,oBEmKVsC,cA9Jb,SAAAA,EAAY7C,GAAO,IAAAS,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAX,KAAA8C,IACjBpC,EAAAC,OAAAE,EAAA,EAAAF,CAAAX,KAAAW,OAAAG,EAAA,EAAAH,CAAAmC,GAAA/B,KAAAf,KAAMC,KAEDiB,MAAQ,CACX6B,QAAS,CACP,CAAEd,MAAS,QAASe,YAAe,mBACnC,CAAEf,MAAS,SAAUe,YAAe,oBACpC,CAAEf,MAAS,OAAQe,YAAe,oCAClC,CAAEf,MAAS,OAAQe,YAAe,kCAClC,CAAEf,MAAS,OAAQe,YAAe,+BAClC,CAAEf,MAAS,OAAQe,YAAe,+BAClC,CAAEf,MAAS,OAAQe,YAAe,+BAClC,CAAEf,MAAS,OAAQe,YAAe,+BAClC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,MAAOe,YAAe,sCACjC,CAAEf,MAAS,OAAQe,YAAe,sBAClC,CAAEf,MAAS,OAAQe,YAAe,uBAClC,CAAEf,MAAS,KAAMe,YAAe,+CAChC,CAAEf,MAAS,KAAMe,YAAe,kDAChC,CAAEf,MAAS,MAAOe,YAAe,oDAEnCC,OAAQ,QACRC,QAAS,GACTC,MAAO,IAAIlC,KAAK,KAAM,EAAG,GAAI,GAAI,EAAG,GAAGoB,WACvCe,IAAK,IAAInC,KAAK,KAAM,EAAG,GAAI,GAAI,EAAG,GAAGoB,YAGvC3B,EAAK2C,aAAe3C,EAAK2C,aAAa3B,KAAlBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACpBA,EAAK4C,cAAgB5C,EAAK4C,cAAc5B,KAAnBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACrBA,EAAK6C,kBAAoB7C,EAAK6C,kBAAkB7B,KAAvBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KACzBA,EAAK8C,gBAAkB9C,EAAK8C,gBAAgB9B,KAArBf,OAAAgB,EAAA,EAAAhB,QAAAgB,EAAA,EAAAhB,CAAAD,KAlCNA,mFAsCjBV,KAAKsD,cAActD,KAAKkB,MAAMiC,MAAOnD,KAAKkB,MAAMkC,IAAKpD,KAAKkB,MAAM+B,6CAGrDnB,GACX9B,KAAKsD,cAActD,KAAKkB,MAAMiC,MAAOnD,KAAKkB,MAAMkC,IAAKtB,EAAME,OAAOC,iDAGlDwB,GAChBzD,KAAKsD,cAAcG,EAASzD,KAAKkB,MAAMkC,IAAKpD,KAAKkB,MAAM+B,gDAGzCQ,GACdzD,KAAKsD,cAActD,KAAKkB,MAAMiC,MAAOM,EAASzD,KAAKkB,MAAM+B,8CAG7CS,EAAWC,EAASV,GAChC,IAAIW,EAAU,GACVT,EAAQ,IAAIlC,KAAKyC,GACjBN,EAAM,IAAInC,KAAK0C,GAiBnB,GAfAE,EAAQC,QAAQ,SAAAC,GACd,GAAIA,EAAQ7D,KAAM,CAChB6D,EAAQ1D,MAAQ,GAEhB,IAAI2D,EAASD,EAAQ7D,KAAK+D,MAAM,KAChCD,EAASA,EAAO,GAAGC,MAAM,KAEzB,IAAIC,EAAU,IAAIjD,KAAK,KAAM,EAAG,GAAI+C,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAE7DE,GAAWf,GAASe,GAAWd,GACjCQ,EAAQnB,KAAKsB,MAKfH,EAAQO,OAAQ,CAElB,IAAIC,EAAWR,EAAQ,GAAGX,GACtBoB,EAAUT,EAAQ,GAAGX,GACrB1C,EAAU,EAEdqD,EAAQE,QAAQ,SAAAQ,GACVF,EAAWE,EAAOrB,KACpBmB,EAAWE,EAAOrB,IAGhBoB,EAAUC,EAAOrB,KACnBoB,EAAUC,EAAOrB,IAGnB1C,GAAW+D,EAAOrB,KAGpB1C,EAAUgE,KAAKC,MAAOjE,EAAUqD,EAAQO,OAAU,KAAO,IACzD5D,EAAW6D,IAAaC,EACnB,IAA+B9D,EAAU6D,IAAcC,EAAUD,GAClE,EACJ7D,EAAUgE,KAAKC,MAAwC,KAAjCjE,EDvGO,ICuGiC,IAG9DqD,EAAQE,QAAQ,SAAAQ,GACdA,EAAOjE,MAAS+D,IAAaC,EAC1B,IAA+BC,EAAOrB,GAAUmB,IAC9CC,EAAUD,GACb,EAEFE,EAAOjE,MAAQkE,KAAKC,MAA6C,KAAtCF,EAAOjE,MDhHP,ICgH6C,IACxEiE,EAAO/D,QAAUA,IAIrBP,KAAK+B,SAAS,CACZmB,QAASU,EACTT,MAAO,IAAIlC,KAAKyC,GAAWrB,WAC3Be,IAAK,IAAInC,KAAK0C,GAAStB,WACvBY,OAAQA,qCAIH,IAAAwB,EAAAzE,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQ+C,SAAU7C,KAAKqD,aAAcpB,MAAOjC,KAAKkB,MAAM+B,QACpDjD,KAAKkB,MAAM6B,QAAQ2B,IAAI,SAACC,EAAQC,GAC/B,OAAOhF,EAAAC,EAAAC,cAAA,UAAQmC,MAAO0C,EAAO1C,MAAOS,IAAKkC,GACtCD,EAAO3B,iBAMhBpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+E,EAAD,CAAY3E,KAAMF,KAAKkB,MAAMiC,MACjBf,aAAcpC,KAAKuD,qBAGjC3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+E,EAAD,CAAY3E,KAAMF,KAAKkB,MAAMkC,IACjBhB,aAAcpC,KAAKwD,oBAInC5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZC,KAAKkB,MAAMgC,QAAQwB,IAAI,SAACI,EAAQF,GAC/B,OAAOhF,EAAAC,EAAAC,cAACiF,EAAD,CAAKrC,IAAKkC,EACL1E,KAAM4E,EAAO5E,KACbC,KAAM2E,EAAOL,EAAKvD,MAAM+B,QACxB1C,QAASuE,EAAOvE,QAChBF,MAAOyE,EAAOzE,mBAvJlBG,aCOLwE,mLARX,OACEpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmF,EAAD,cAJUzE,aCQE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3a47bb48.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Bar.scss';\n\nclass Bar extends Component {\n  render() {\n    return (\n      <div className=\"Bar\">\n        <div className=\"Bar__time\">{ this.props.time }</div>\n        <div className=\"Bar__data\">\n          { this.props.data }\n          <span className=\"Bar__block\" style={{ 'width': this.props.width + '%' }}></span>\n          <span className=\"Bar__average\" style={{ 'left': this.props.average + '%' }}></span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bar;","import React, { Component } from 'react';\nimport { HOUR_RANGE_START, HOUR_RANGE_END, SEC_MIN_RANGE_START, SEC_MIN_RANGE_END } from '../../config/constants';\n\nclass Datepicker extends Component {\n  constructor(props) {\n    super(props);\n\n    let initialDate = new Date(this.props.time);\n\n    this.state = {\n      hours: initialDate.getHours(),\n      minutes: initialDate.getMinutes(),\n      seconds: initialDate.getSeconds(),\n    }\n\n    this.handleHoursChange = this.handleHoursChange.bind(this);\n    this.handleMinutesChange = this.handleMinutesChange.bind(this);\n    this.handleSecondsChange = this.handleSecondsChange.bind(this);\n  }\n\n  handleHoursChange(event) {\n    this.setState({ hours: event.target.value });\n\n    let update = new Date(this.props.time);\n    update.setHours(event.target.value);\n    this.props.onTimeChange(update.toString());\n  }\n\n  handleMinutesChange(event) {\n    this.setState({ minutes: event.target.value });\n\n    let update = new Date(this.props.time);\n    update.setMinutes(event.target.value);\n    this.props.onTimeChange(update.toString());\n  }\n\n  handleSecondsChange(event) {\n    this.setState({ seconds: event.target.value });\n\n    let update = new Date(this.props.time);\n    update.setSeconds(event.target.value);\n    this.props.onTimeChange(update.toString());\n  }\n  \n  render() {\n    let hours = [];\n    for (let i=HOUR_RANGE_START; i<HOUR_RANGE_END; i++) {\n      hours.push(<option value={i} key={'ho-' + i}>{ ('0' + i).slice(-2) }</option>);\n    }\n\n    let secsMins = [];\n    for (let i=SEC_MIN_RANGE_START; i<SEC_MIN_RANGE_END; i++) {\n      secsMins.push(<option value={i} key={'sm-' + i}>{ ('0' + i).slice(-2) }</option>);\n    }\n\n    return (\n      <div className=\"Datepicker\">\n        <select value={this.state.hours} onChange={this.handleHoursChange}>{hours}</select>\n        <select value={this.state.minutes} onChange={this.handleMinutesChange}>{secsMins}</select>\n        <select value={this.state.seconds} onChange={this.handleSecondsChange}>{secsMins}</select>\n      </div>\n    );\n  }\n}\n\nexport default Datepicker;","export const SMALLEST_PERCENTAGE = 1;\nexport const HOUR_RANGE_START = 10;\nexport const HOUR_RANGE_END = 15;\nexport const SEC_MIN_RANGE_START = 0;\nexport const SEC_MIN_RANGE_END = 60;","import React, { Component } from 'react';\nimport './Chart.scss';\nimport Bar from '../Bar/Bar';\nimport Datepicker from '../Datepicker/Datepicker';\nimport metrics from '../../config/metrics.json';\nimport { SMALLEST_PERCENTAGE } from '../../config/constants';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: [\n        { 'value': 'files', 'description': 'number of files' },\n        { 'value': 'inodes', 'description': 'number of inodes' },\n        { 'value': 'recv', 'description': 'network > bytes received (bytes)' },\n        { 'value': 'send', 'description': 'network > bytes sended (bytes)' },\n        { 'value': 'used', 'description': 'memory usage > used (bytes)' },\n        { 'value': 'buff', 'description': 'memory usage > buff (bytes)' },\n        { 'value': 'cach', 'description': 'memory usage > cach (bytes)' },\n        { 'value': 'free', 'description': 'memory usage > free (bytes)' },\n        { 'value': 'usr', 'description': 'total cpu usage > usr (percentage)' },\n        { 'value': 'sys', 'description': 'total cpu usage > sys (percentage)' },\n        { 'value': 'idl', 'description': 'total cpu usage > idl (percentage)' },\n        { 'value': 'wai', 'description': 'total cpu usage > wai (percentage)' },\n        { 'value': 'hiq', 'description': 'total cpu usage > hiq (percentage)' },\n        { 'value': 'siq', 'description': 'total cpu usage > siq (percentage)' },\n        { 'value': 'read', 'description': 'read bytes on disk' },\n        { 'value': 'writ', 'description': 'write bytes on disk' },\n        { 'value': '1m', 'description': 'load average > for last minute (percentage)' },\n        { 'value': '5m', 'description': 'load average > for last 5 minutes (percentage)' },\n        { 'value': '15m', 'description': 'load average > for last 15 minutes (percentage)' },\n      ],\n      family: 'files',\n      records: [],\n      start: new Date(2019, 2, 16, 10, 0, 0).toString(),\n      end: new Date(2019, 2, 16, 13, 0, 0).toString(),\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRecords = this.handleRecords.bind(this);\n    this.onStartTimeChange = this.onStartTimeChange.bind(this);\n    this.onEndTimeChange = this.onEndTimeChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleRecords(this.state.start, this.state.end, this.state.family);\n  }\n  \n  handleChange(event) {\n    this.handleRecords(this.state.start, this.state.end, event.target.value);\n  }\n\n  onStartTimeChange(newDate) {\n    this.handleRecords(newDate, this.state.end, this.state.family);\n  }\n\n  onEndTimeChange(newDate) {\n    this.handleRecords(this.state.start, newDate, this.state.family);\n  }\n\n  handleRecords(startDate, endDate, family) {\n    let results = [];\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n\n    metrics.forEach(element => {\n      if (element.time) {\n        element.width = 70;\n      \n        let pieces = element.time.split(' ');\n        pieces = pieces[1].split(':');\n        \n        let eltDate = new Date(2019, 2, 16, pieces[0], pieces[1], pieces[2]);\n        \n        if (eltDate >= start && eltDate <= end) {\n          results.push(element);\n        }\n      }\n    });\n    \n    if (results.length) {\n      // Smallest, largest, average\n      let smallest = results[0][family];\n      let largest = results[0][family];\n      let average = 0;\n      \n      results.forEach(result => {\n        if (smallest > result[family]) {\n          smallest = result[family];\n        }\n        \n        if (largest < result[family]) {\n          largest = result[family];\n        }\n\n        average += result[family];\n      });\n\n      average = Math.round((average / results.length) * 100) / 100;\n      average = (smallest !== largest) \n        ? ((100 - SMALLEST_PERCENTAGE) * (average - smallest)) / (largest - smallest) \n        : 0;\n      average = Math.round((average + SMALLEST_PERCENTAGE) * 100) / 100;\n\n      // Width calculation\n      results.forEach(result => {\n        result.width = (smallest !== largest) \n        ? ((100 - SMALLEST_PERCENTAGE) * (result[family] - smallest)) \n          / (largest - smallest) \n        : 0;\n        \n        result.width = Math.round((result.width + SMALLEST_PERCENTAGE) * 100) / 100;\n        result.average = average;\n      });\n    }\n\n    this.setState({\n      records: results,\n      start: new Date(startDate).toString(),\n      end: new Date(endDate).toString(),\n      family: family,\n    });\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Metrics</h1>\n\n        <nav className=\"Nav\">\n          <div className=\"Nav__item\">\n            <select onChange={this.handleChange} value={this.state.family}>\n              {this.state.options.map((option, index) => {\n                return <option value={option.value} key={index}>\n                  {option.description}\n                </option>\n              })}\n            </select>\n          </div>\n          \n          <div className=\"Nav__item\">\n            <Datepicker time={this.state.start}\n                        onTimeChange={this.onStartTimeChange}></Datepicker>\n          </div>\n\n          <div className=\"Nav__item\">\n            <Datepicker time={this.state.end}\n                        onTimeChange={this.onEndTimeChange}></Datepicker>\n          </div>\n        </nav>\n\n        <div className=\"Chart\">\n          {this.state.records.map((record, index) => {\n            return <Bar key={index}\n                        time={record.time}\n                        data={record[this.state.family]}\n                        average={record.average}\n                        width={record.width} />\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chart;","import React, { Component } from 'react';\nimport './App.scss';\nimport Chart from './Features/Chart/Chart';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Chart></Chart>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}